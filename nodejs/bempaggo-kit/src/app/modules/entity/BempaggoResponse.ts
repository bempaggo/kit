import { CardBrandTypes, ChargeStatusTypes, PaymentMethodTypes, RefundReasonTypes, TransactionResponseTypes, TransactionStatusTypes } from "./Enum";

interface BempaggoCustomerResponse {
	id: number;
	phone?: BempaggoPhoneResponse;
	birthdate?: string;
	email?: string;
	document?: string;
	name: string;
	address?: BempaggoAddressResponse;
}

interface BempaggoMinimalCustomerResponse {
	id: number;
	document: string
}
interface BempaggoAddressResponse {
	street: string;
	streetNumber: string;
	lineTwo?: string;
	neighborhood: string;
	city: string;
	state: string;
	zipCode: string;
}

interface BempaggoPhoneResponse {
	countryCode: string;
	areaCode: string;
	number: string;
}
interface BempaggoEstablishmentMinimalResponse {
	id: number;
}

interface BempaggoCardHolderResponse {
	name: string;
	document?: string;
}
interface BempaggoAffiliateMinimalResponse {
	id: number;
	name: string;
	businessName: string;
}

interface BempaggoCardExpirationResponse {
	year: number;
	month: number;
}
interface BempaggoCardResponse {
	token?: string | undefined;
	holder: BempaggoCardHolderResponse;
	bin: string;
	lastFour: string;
	expiration: BempaggoCardExpirationResponse;
	brand: CardBrandTypes;
}
interface BempaggoChargeResponse {
	id: number;
	status: ChargeStatusTypes;
	value: number;
	refundedAmount?: number | undefined;
	transactions: BempaggoTransactionResponse[];
	customer: BempaggoMinimalCustomerResponse;
	order: BempaggoMinimalOrderResponse;
}

interface BempaggoMinimalOrderResponse {
	id: number;
	orderReference: string
	affiliate?: BempaggoAffiliateMinimalResponse
}

interface BempaggoMinimalCustomerResponse {
	id: number;
	document: string
}

interface BempaggoTransactionResponse {
	id: number;
	returnCode: string;
	returnMessage: string;
	value: number;
	paidValue?: number;
	refundValue?: number;
	/**
	 * transactionKey is the value generated by the acquirer (Rede, Cielo ...) 
	 */
	transactionKey: string;
	/**
	 * transactionReference is the value to send to the acquirer (Rede, Cielo ...) to tracer the transaction
	 */
	transactionReference: string;
	refundRason?: RefundReasonTypes;
	type: TransactionResponseTypes;
	status: TransactionStatusTypes;
	transactionDate: number;
	/**
	 * affiliate is the seller. This is the account the payment was sent to.
	 */
	affiliate?: BempaggoAffiliateMinimalResponse;
	paymentMethod: PaymentMethodTypes;
	/**
	 * establishment is a specific account of the affiliate that the payment was sent to.
	 */
	establishment: BempaggoEstablishmentMinimalResponse;
	card?: BempaggoCardResponse;
	/** 
	 * The splits are parts that each affiliate (seller) owns. 
	 * However, the amounts are not sent to the affiliate acquirer's account.
	 * The amounts are only sent to the acquirer's account for the affiliate (seller informed in the order authorization, in the order URL).
	 */
	splits: BempaggoSplitResponse[];
	installments: number
}

interface BempaggoSplitResponse {
	affiliate: BempaggoAffiliateMinimalResponse;
	/** Value in cents  */
	amount: number
}
export {
	BempaggoSplitResponse,
	BempaggoAddressResponse,
	BempaggoTransactionResponse,
	BempaggoChargeResponse,
	BempaggoCustomerResponse,
	BempaggoPhoneResponse,
	BempaggoCardHolderResponse,
	BempaggoCardExpirationResponse,
	BempaggoCardResponse,
	BempaggoAffiliateMinimalResponse,
	BempaggoEstablishmentMinimalResponse,
	BempaggoMinimalCustomerResponse

};

